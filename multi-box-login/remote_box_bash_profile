# To the extent possible under law, the author(s) have dedicated all 
# copyright and related and neighboring rights to this software to the 
# public domain worldwide. This software is distributed without any warranty. 
# You should have received a copy of the CC0 Public Domain Dedication along 
# with this software. 
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>. 

# base-files version 4.0-9

# ~/.bash_profile: executed by bash(1) for login shells.

# The latest version as installed by the Cygwin Setup program can
# always be found at /etc/defaults/etc/skel/.bash_profile

# Modifying /etc/skel/.bash_profile directly will prevent
# setup from updating it.

# The copy in your home directory (~/.bash_profile) is yours, please
# feel free to customise it to create a shell
# environment to your liking.  If you feel a change
# would be benifitial to all, please feel free to send
# a patch to the cygwin mailing list.

# User dependent .bash_profile file

# Set user-defined locale
#export LANG=$(locale -uU)

# Set PATH so it includes user's private bin if it exists
# if [ -d "${HOME}/bin" ] ; then
#   PATH="${HOME}/bin:${PATH}"
# fi

# Set MANPATH so it includes users' private man if it exists
# if [ -d "${HOME}/man" ]; then
#   MANPATH="${HOME}/man:${MANPATH}"
# fi

# Set INFOPATH so it includes users' private info if it exists
# if [ -d "${HOME}/info" ]; then
#   INFOPATH="${HOME}/info:${INFOPATH}"
# fi

# Set colors :
red='\[\033[0;31m\]'
RED='\[\033[1;31m\]'
green='\[\033[0;32m\]'
GREEN='\[\033[1;32m\]'
yellow='\[\033[0;33m\]'
YELLOW='\[\033[1;33m\]'
blue='\[\033[0;34m\]'
BLUE='\[\033[1;34m\]'
magenta='\[\033[0;35m\]'
MAGENTA='\[\033[1;35m\]'
cyan='\[\033[0;36m\]'
CYAN='\[\033[1;36m\]'
white='\[\033[0;37m\]'
WHITE='\[\033[1;37m\]'
NC='\[\033[0m\]' # No Color

#can't indent here since it actually affects the prompt!
loginprompt()
{
export PS1="$white[$yellow\$(date +%H:%M)$white]$green\u$white@$red\h$white:$cyan\w
$ $white"
}

variables()
{
}


#Define aliases here
aliases()
{
	#My Aliases

	#Quickly see all my processes
	alias myprocs='ps -fu $USER'
	
	alias ..='cd ..'
	alias la='ls -Al' # show hidden files

	alias jps='jps -lm';
	alias rm='rm -v';

}

bashopts()
{
	#Commenting out the following till I can see what it does

	# Set up bash only settings
	#if [ `echo $SHELL` == "/usr/local/bin/bash" -o "/bin/bash" ]; then
	#shopt -s cdspell
	#shopt -s extglob
	#shopt -s dotglob
	#shopt -s cmdhist
	#shopt -s lithist
	#shopt -s progcomp
	#shopt -s checkhash
	#shopt -s histreedit
	#shopt -s promptvars
	#shopt -s cdable_vars
	#shopt -s checkwinsize
	#shopt -s hostcomplete
	#shopt -s expand_aliases
	#shopt -s interactive_comments

	bind 'set show-all-if-ambiguous on' # Tab once for complete
	bind 'set visible-stats on' # Show file info in complete

	
	#Larger Bash History
	export HISTSIZE=10000
	export HISTFILESIZE=100000
	
	#Append history to the hist file at end of session
	shopt -s histappend
	
	#Remove duplicates from the history
	export HISTCONTROL=erasedups

	# Set VI as default editor
	#export EDITOR=vi
}

#Extra key bindings commented out ones seem to be enabled by default on ubuntu
bindings()
{
	#bind ctrl+left back one word
#	bind '"\eOD": backward-word'
	
	#bind ctrl+right forward one word
#	bind '"\eOC": forward-word'
	
	#bind alt+up back one word
#	bind '"\e\e[A": backward-word'
	
	#bind alt+down forward one word
#	bind '"\e\e[B": forward-word'
	
	#Bind alt+left backward kill  word
	bind '"\e[1;3D": backward-kill-word'

	#Bind alt+right forward kill word
	bind '"\e[1;3C": kill-word'
	
	#bind home to beginning of line
#	bind '"\e[1~": beginning-of-line'
	
	#bind end to end of line
#	bind '"\e[4~": end-of-line'
	
	#Bind alt+home kill line back
	#bind '"\eOH":unix-line-discard'
	
	#Bind alt+end kill line forward
	#bind '"\eOF":kill-line'
}


######################### - Run The Shit! - ###################################
#Set the termial type
export TERM=vt100
#Define aliases
aliases;
#Export variables
variables;
# set a fancy prompt
loginprompt;
#set bash options
bashopts
#Enable custum key bindings
bindings;


###################  - Define Custom Functions - #########################

#mkdir and change to it
mcd(){
	mkdir "${1}" && cd "${1}";
}

qf()
{
	find . -name $1;
}

iqf()
{
	find . -iname $1;
}

findInRepo()
{
	svn ls -R --depth infinity ${REPO} | grep "${1}";
}

countLinesOfJava(){
	find -name "*.java" -exec bash -c 'cat $1 | wc -l' - {} \; | awk '{s+=$1} END {print s}';
}

#Useful one liners to make into functions one day

#print the captured bit
perl -ne 'm|local.pages.root=(.*)| &&  print "$1";' piers.properties